{"version":3,"file":"main.js","mappings":"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","sources":["webpack://chat-frontend/./src/js/addUserToList.js","webpack://chat-frontend/./src/js/hideErrorMessage.js","webpack://chat-frontend/./src/js/updateUsersList.js","webpack://chat-frontend/./src/js/formatDate.js","webpack://chat-frontend/./src/js/getName.js","webpack://chat-frontend/./src/js/addMessageToChat.js","webpack://chat-frontend/./src/js/ws.js","webpack://chat-frontend/./src/js/chekNickname.js","webpack://chat-frontend/./src/js/handleNicknameCheck.js","webpack://chat-frontend/./src/js/app.js","webpack://chat-frontend/./src/index.js"],"sourcesContent":["export function addUserToList(user) {\n    const usersList = document.querySelector('.users-list');\n    const newUserItem = document.createElement('li');\n    newUserItem.classList.add('user');\n    newUserItem.textContent = user.name;\n    newUserItem.dataset.id = user.id; \n    usersList.appendChild(newUserItem);\n}","export function hideErrorMessage() {\n    const errorMessage = document.querySelector('.error-message');\n    if (errorMessage) {\n        errorMessage.style.display = 'none';\n        document.removeEventListener('click', hideErrorMessage);\n    }\n}","import { addUserToList } from './addUserToList';\n\nexport function updateUsersList(users) {\n    const usersList = document.querySelector('.users-list');\n    const existingUsers = new Map();\n\n    usersList.querySelectorAll('.user').forEach(user => {\n        const userId = user.dataset.id;\n        existingUsers.set(userId, user);\n    });\n\n    users.forEach(user => {\n        if (!existingUsers.has(user.id)) {\n            addUserToList(user);\n        } else {\n            existingUsers.delete(user.id);\n        }\n    });\n\n    existingUsers.forEach(user => {\n        user.remove();\n    });\n}\n","export function formatDate(date) {\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Месяцы начинаются с 0\n    const year = date.getFullYear();\n\n    return `${hours}:${minutes} ${day}.${month}.${year}`;\n}","let currentUserName = null;\n\nexport function setCurrentUserName(name) {\n    currentUserName = name;\n}\n\nexport function getCurrentUserName() {\n    return currentUserName;\n}","import { formatDate } from './formatDate';\nimport { getCurrentUserName } from './getName';\n\nexport function addMessageToChat(message, author) {\n    const chat = document.querySelector('.chat');\n\n    const messageNode = document.createElement('div');\n\n    const messageInfo = document.createElement('div');\n    messageInfo.classList.add('message-info');\n\n    const messageAuthor = document.createElement('div');\n    messageAuthor.textContent = author;\n    messageAuthor.classList.add('message-author'); \n\n    const messageData = document.createElement('div');\n    messageData.textContent = formatDate(new Date()); \n    messageData.classList.add('message-data');\n\n    messageInfo.appendChild(messageAuthor);\n    messageInfo.appendChild(messageData);\n\n    const messageText = document.createElement('div');\n    messageText.textContent = message;\n    messageText.classList.add('message-text'); \n    \n    const currentUserName = getCurrentUserName();\n\n    if (author === currentUserName) {\n        messageAuthor.textContent = 'You';\n        messageNode.classList.add('my-message'); \n    } \n\n    messageNode.appendChild(messageInfo);\n    messageNode.appendChild(messageText);\n\n    chat.appendChild(messageNode);\n}\n","import { updateUsersList } from './updateUsersList';\nimport { addMessageToChat } from './addMessageToChat';\n\nexport function initializeWebSocketConnection(userName) {\n    const ws = new WebSocket('ws://localhost:3000/ws');\n    const chatMessage = document.querySelector('.chat-message');\n\n    chatMessage.addEventListener('keydown', (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n\n            const message = chatMessage.value;\n            if (!message) {\n                return;\n            }\n\n            ws.send(JSON.stringify({\n                type: 'send',\n                message,\n                author: userName\n            }));\n\n            chatMessage.value = '';\n        }\n    });\n\n    ws.addEventListener('open', (e) => {\n        console.log('WebSocket соединение открыто:', e);\n        if (userName) {\n            ws.send(JSON.stringify({\n                type: 'new-user',\n                name: userName\n            }));\n        }\n    });\n\n    ws.addEventListener('message', (e) => {\n        const data = JSON.parse(e.data);\n\n        if (data.type === 'update-users') {\n            updateUsersList(data.users); \n        }\n\n        if (data.type === 'message-history') {\n            data.messages.forEach(message => {\n                addMessageToChat(message.text, message.author);\n            });\n        }\n\n        if (data.type === 'new-message') {\n            addMessageToChat(data.message.text, data.message.author);\n        }\n    });\n\n    ws.addEventListener('close', (e) => {\n        console.log('WebSocket соединение закрыто:', e);\n    });\n\n    ws.addEventListener('error', (e) => {\n        console.log('Ошибка WebSocket:', e);\n    });\n\n    window.addEventListener('beforeunload', () => {\n        if (userName) {\n            ws.send(JSON.stringify({\n                type: 'exit',\n                name: userName\n            }));\n        }\n    });\n}\n","import { addUserToList } from './addUserToList';\nimport { hideErrorMessage } from './hideErrorMessage'; \nimport { initializeWebSocketConnection } from './ws';\nimport { setCurrentUserName } from './getName'; \n\nconst baseURL = 'http://localhost:3000';\n\nexport async function checkNickname() {\n    let currentUserName = null; \n    const nicknameInput = document.querySelector('.field-input-name');\n    const nickname = nicknameInput.value.trim();\n    const errorMessage = document.querySelector('.error-message');\n    \n    if (!nickname) {\n        errorMessage.textContent = 'Пожалуйста, введите псевдоним';\n        errorMessage.style.display = 'block';\n\n        setTimeout(() => {\n            document.addEventListener('click', hideErrorMessage);\n        }, 0);\n\n        return null;\n    }\n\n    document.removeEventListener('click', hideErrorMessage);\n\n    try {\n        const response = await fetch(`${baseURL}/new-user`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ name: nickname }),\n        });\n\n        if (response.ok) {\n            const result = await response.json();\n            if (result.status === 'ok') {\n                console.log('Никнейм зарегистрирован:', result.user.name);\n                document.querySelector('.popup__choose-name').style.display = 'none';\n                document.querySelector('.chat-widget').style.display = 'block';\n                \n                const usersList = document.querySelector('.users-list');\n                usersList.innerHTML = ''; \n                addUserToList(result.user);\n\n                currentUserName = result.user.name;\n\n                setCurrentUserName(currentUserName);\n\n                initializeWebSocketConnection(currentUserName);\n                \n                const usersElements = usersList.querySelectorAll('.user');\n                usersElements.forEach(user => {\n                    if (user.dataset.id === result.user.id) {\n                        user.textContent = 'You';\n                        user.classList.add('my-nickname');\n                    }\n                });\n\n                nicknameInput.value = '';\n\n                return currentUserName; \n\n            } else {\n                throw new Error(result.message);\n            }\n        } else if (response.status === 409) {\n            errorMessage.textContent = 'Этот псевдоним уже занят!';\n            errorMessage.style.display = 'block';\n            setTimeout(() => {\n                document.addEventListener('click', hideErrorMessage);\n            }, 0);\n            nicknameInput.value = '';\n        }\n\n    } catch (error) {\n        errorMessage.textContent = error.message;\n        errorMessage.style.display = 'block';\n    }\n\n    return null; \n}\n","import { checkNickname } from './chekNickname';\n\nexport function handleNicknameCheck(event){\n    if (event.type === 'click' || (event.type === 'keydown' && event.key === 'Enter')) {\n        event.preventDefault();\n        checkNickname();\n    }\n};","import { handleNicknameCheck } from './handleNicknameCheck';\n\nconst nicknameInput = document.querySelector('.field-input-name');\nconst continueButton = document.querySelector('.popup_btn-continue');\n\ncontinueButton.addEventListener('click', handleNicknameCheck);\nnicknameInput.addEventListener('keydown', handleNicknameCheck);\n","import './css/style.css';\nimport './js/app';"],"names":["addUserToList","user","usersList","document","querySelector","newUserItem","createElement","classList","add","textContent","name","dataset","id","appendChild","hideErrorMessage","errorMessage","style","display","removeEventListener","updateUsersList","users","existingUsers","Map","querySelectorAll","forEach","userId","set","has","delete","remove","formatDate","date","hours","String","getHours","padStart","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","currentUserName","setCurrentUserName","getCurrentUserName","addMessageToChat","message","author","chat","messageNode","messageInfo","messageAuthor","messageData","Date","messageText","initializeWebSocketConnection","userName","ws","WebSocket","chatMessage","addEventListener","event","key","preventDefault","value","send","JSON","stringify","type","e","console","log","data","parse","messages","text","window","baseURL","checkNickname","nicknameInput","nickname","trim","setTimeout","response","fetch","method","headers","body","ok","result","json","status","innerHTML","usersElements","Error","error","handleNicknameCheck","continueButton"],"sourceRoot":""}